syntax = "proto3";

package google.cloud.run.v1;

import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/run/v1;run";

// ListMeta describes metadata that synthetic resources must have, including lists and various status objects. 
// A resource may have only one of {ObjectMeta, ListMeta}.
message ListMeta {
    // SelfLink is a URL representing this object. Populated by the system. Read-only.
    string self_link = 1;
    // String that identifies the server's internal version of this object that can be used by clients 
    // to determine when objects have changed. 
    // Value must be treated as opaque by clients and passed unmodified back to the server. 
    // Populated by the system. Read-only. 
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 2;
    // continue may be set if the user set a limit on the number of items returned, and indicates that the server has 
    // more data available. The value is opaque and may be used to issue another request to the endpoint that served 
    // this list to retrieve the next set of available objects. Continuing a list may not be possible if the server 
    // configuration has changed or more than a few minutes have passed. 
    // The resourceVersion field returned when using this continue value will be identical to the value in the first response.
    string continue = 3;
}

// k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, 
// which includes all objects users must create.
message ObjectMeta {
    // Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, 
    // although some resources may allow a client to request the generation of an appropriate name automatically. 
    // Name is primarily intended for creation idempotence and configuration definition. 
    // Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 1;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. 
    // If this field is used, the name returned to the client will be different than the name passed. 
    // This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, 
    // and may be truncated by the length of the suffix required to make the value unique on the server.
    // If this field is specified and the generated name exists, the server will NOT return a 409 - instead, 
    // it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found 
    // in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
    // Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
    string generate_name = 2;
    // Namespace defines the space within each name must be unique, within a Cloud Run region. 
    // In Cloud Run the namespace must be equal to either the project ID or project number.
    string namespace = 3;
    // SelfLink is a URL representing this object. Populated by the system. Read-only. 
    string self_link = 4;
    // UID is the unique in time and space value for this object. It is typically generated by the server on successful 
    // creation of a resource and is not allowed to change on PUT operations.
    // Populated by the system. Read-only.
    string uid = 5;
    // An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. 
    // May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. 
    // Clients must treat these values as opaque and passed unmodified back to the server. 
    // They may only be valid for a particular resource or set of resources.
    // Populated by the system. Read-only. Value must be treated as opaque by clients. 
    // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 6;
    // A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
    int32 generation = 7;
    // CreationTimestamp is a timestamp representing the server time when this object was created. 
    // It is not guaranteed to be set in happens-before order across separate operations. 
    // Clients may not set this value. It is represented in RFC3339 form and is in UTC.
    // Populated by the system. Read-only. Null for lists. 
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    google.protobuf.Timestamp create_time = 8;
    // Map of string keys and values that can be used to organize and categorize (scope and select) objects. 
    // May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 9;
    // Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. 
    // They are not queryable and should be preserved when modifying objects. 
    // More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 10;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected.
    repeated OwnerReference owner_references = 11;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. 
    // This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. 
    // The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) 
    // after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. 
    // Once the deletionTimestamp is set, this value may not be unset or be set further into the future, 
    // although it may be shortened or the resource may be deleted prior to this time. 
    // For example, a user may request that a pod is deleted in 30 seconds. 
    // The Kubelet will react by sending a graceful termination signal to the containers in the pod. 
    // After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, 
    // remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, 
    // until an administrator or automated process can determine the resource is fully terminated. 
    // If not set, graceful deletion of the object has not been requested.
    // Populated by the system when a graceful deletion is requested. Read-only. 
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    google.protobuf.Timestamp delete_time = 12;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. 
    // Only set when deletionTimestamp is also set. May only be shortened. Read-only.   
    int32 deletion_grace_period_seconds = 13;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will 
    // remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.
    repeated string finalizers = 14;
    // Cloud Run fully managed: not supported
    // Cloud Run for Anthos: supported
    // The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different 
    // clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
    string cluster_name = 15;
}

// OwnerReference contains enough information to let you identify an owning object. 
// Currently, an owning object must be in the same namespace, so there is no namespace field.
message OwnerReference {
    // API version of the referent.
    string api_version = 1;
    // Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    string kind = 2;
    // Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 3;
    // UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 4;
    // If true, this reference points to the managing controller. 
    bool controller = 5;
    // If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store 
    // until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, 
    // otherwise 422 (Unprocessable Entity) will be returned.
    bool block_owner_deletion = 6;
}

// Status is a return value for calls that don't return other objects
message Status {
    // Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    ListMeta metadata = 1;
    // Status of the operation. One of: "Success" or "Failure". 
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status 
    string status = 2;
    // A human-readable description of the status of this operation.
    string message = 3;
    // A machine-readable description of why this operation is in the "Failure" status. 
    // If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
    string reason = 4;
    // Extended data associated with the reason. Each reason may define its own extended details. 
    // This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
    StatusDetails details = 5;
    // Suggested HTTP return code for this status, 0 if not set.
    int32 code = 6;
}

// StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
message StatusCause {
    // A machine-readable description of the cause of the error. If this value is empty there is no information available.
    string reason = 1;
    // A human-readable description of the cause of the error. This field may be presented as-is to a reader.
    string message = 2;
    // The field of the resource that has caused this error, as named by its JSON serialization. 
    // May include dot and postfix notation for nested attributes. Arrays are zero-indexed. 
    // Fields may appear more than once in an array of causes due to fields having multiple errors.
    // Examples: "name" - the field "name" on the current resource "items[0].name" - the field "name" on the first array entry in "items"
    string field = 3;
}

// StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. 
// The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined 
// type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
message StatusDetails {
    // The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
    string name = 1;
    // The group attribute of the resource associated with the status StatusReason
    string group = 2;
    // The kind attribute of the resource associated with the status StatusReason. 
    // On some operations may differ from the requested resource Kind. 
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    string kind = 3;
    // UID of the resource. (when there is a single resource which can be described). 
    // More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 4;
    // The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. 
    repeated StatusCause causes = 5;
    // If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - 
    // for those errors this field may indicate how long to wait before taking the alternate action. 
    int32 retry_after_seconds = 6;
}