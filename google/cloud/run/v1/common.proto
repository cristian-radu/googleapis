syntax = "proto3";

package google.cloud.run.v1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/run/v1;run";

message TrafficTarget {
    // ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. 
    // When the "status.latestReadyRevisionName" of the referenced configuration changes, we will automatically migrate traffic 
    // from the prior "latest ready" revision to the new one. This field is never set in Route's status, only its spec. 
    // This is mutually exclusive with RevisionName.
    // Cloud Run currently supports a single ConfigurationName.
    string configuration_name = 1;
    // RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName.
    // Providing RevisionName in spec is not currently supported by Cloud Run.
    string revision_name = 2;
    // Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified.
    // Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry.
    int32 percent = 3;
    // Tag is optionally used to expose a dedicated url for referencing this target exclusively.
    string tag = 4;
    // LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. 
    // When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.
    bool latest_revision = 5;
    // Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. 
    // URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
    string url = 6;
}

message Condition {
    // type is used to communicate the status of the reconciliation process. 
    // See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting 
    // Types common to all resources include: * "Ready": True when the Resource is ready.
    string type = 1;
    // Status of the condition, one of True, False, Unknown.
    string status = 2;
    // One-word CamelCase reason for the condition's last transition.
    string reason = 3;
    // Human readable message indicating details about the current status.
    string message = 4;
    // Last time the condition transitioned from one status to another.
    google.protobuf.Timestamp last_transition_time = 5;
    // How to interpret failures of this condition, one of Error, Warning, Info
    string severity = 6;
}

message Addressable {
    // Information for connecting over HTTP(s).
    string url = 1; 
}

message RevisionSpec {
    // ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision.
    // Cloud Run fully managed: supported, defaults to 80
    // Cloud Run for Anthos: supported, defaults to 0, which means concurrency to the application is not limited, 
    // and the system decides the target concurrency for the autoscaler.
    int32 container_concurrency = 1;
    // TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
    // Cloud Run fully managed: defaults to 300 seconds (5 minutes). Maximum allowed value is 900 seconds (15 minutes).
    // Cloud Run for Anthos: defaults to 300 seconds (5 minutes). Maximum allowed value is configurable by the cluster operator.
    int32 timeout_seconds = 2;
    // Email address of the IAM service account associated with the revision of the service. 
    // The service account represents the identity of the running revision, and determines what permissions the revision has. 
    // If not provided, the revision will use the project's default service account.
    string service_account_name = 3;
    // Containers holds the single container that defines the unit of execution for this Revision. 
    // In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. 
    // In Cloud Run, only a single container may be provided. 
    // The runtime contract is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md
    repeated k8s.io.api.core.v1.Container containers = 4;
    repeated k8s.io.api.core.v1.Volume volumes = 5;
}

message RevisionTemplate {
    // Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration.
    // The following annotation keys set properties of the created revision:
    // autoscaling.knative.dev/minScale sets the minimum number of instances.
    // autoscaling.knative.dev/maxScale sets the maximum number of instances.
    // run.googleapis.com/cloudsql-instances sets Cloud SQL connections. Multiple values should be comma separated.
    // run.googleapis.com/vpc-access-connector sets a Serverless VPC Access connector.
    // run.googleapis.com/vpc-access-egress sets VPC egress. Supported values are all-traffic, all (deprecated), and private-ranges-only. 
    // all-traffic and all provide the same functionality. all is deprecated but will continue to be supported. Prefer all-traffic.
    k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
    // RevisionSpec holds the desired state of the Revision (from the client).
    RevisionSpec spec = 2;
}
